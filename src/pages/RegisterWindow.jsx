import React, { useState } from "react";
import "./RegisterWindow.css";
import myImage from '../assets/imagregavt.png';

export default function RegisterWindow({ onSwitchToLogin, onRegisterSuccess, onHomeClick, onRegister }) {
  const [formData, setFormData] = useState({
    login: '',
    password: '',
    confirmPassword: ''
  });
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
    setError('');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.login || !formData.password) {
      setError('–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
      setLoading(false);
      return;
    }

    if (formData.password.length < 6) {
      setError('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');
      setLoading(false);
      return;
    }

    if (formData.password !== formData.confirmPassword) {
      setError('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      setLoading(false);
      return;
    }

    try {
      if (onRegister) {
        await onRegister({
          login: formData.login,
          password: formData.password
        });
      }

      onRegisterSuccess();

      // –ú–æ–∂–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      setFormData({
        login: '',
        password: '',
        confirmPassword: ''
      });
    } catch (error) {
      setError(error.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="register-container">
      <button 
        className="home-button"
        onClick={onHomeClick}
        disabled={loading}
        title="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é"
      >
        ‚Üê –î–æ–º–æ–π
      </button>

      <div className="register-info">
        <h1>Urka Phone</h1>
        <p>–†–∏—Å—É–π—Ç–µ, —É–≥–∞–¥—ã–≤–∞–π—Ç–µ –∏ –≤–µ—Å–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏ –≤ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∏–≥—Ä–µ!</p>
        <img src={myImage} alt="–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏" className="register-image" />
        <div className="features">
          <div className="feature">
            <span>üéÆ</span>
            <div>
              <h3>–í–µ—Å–µ–ª—ã–µ –∏–≥—Ä—ã</h3>
              <p>–†–∏—Å—É–π –∏ —É–≥–∞–¥–∞–π</p>
            </div>
          </div>
          <div className="feature">
            <span>üë•</span>
            <div>
              <h3>–° –¥—Ä—É–∑—å—è–º–∏</h3>
              <p>–î–æ 8 –∏–≥—Ä–æ–∫–æ–≤</p>
            </div>
          </div>
        </div>
      </div>

      <form className="register-form" onSubmit={handleSubmit}>
        <h2>–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</h2>
        <p>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å</p>

        <input
          type="text"
          name="login"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
          value={formData.login}
          onChange={handleChange}
          className={error && (!formData.login || formData.login.length < 3) ? "error" : ""}
          disabled={loading}
        />
        {error && !formData.login && <span className="error-text">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ</span>}

        <input
          type="password"
          name="password"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
          value={formData.password}
          onChange={handleChange}
          className={error && (formData.password.length < 6) ? "error" : ""}
          disabled={loading}
        />
        {error && formData.password.length < 6 && <span className="error-text">–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤</span>}

        <input
          type="password"
          name="confirmPassword"
          placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
          value={formData.confirmPassword}
          onChange={handleChange}
          className={error && (formData.password !== formData.confirmPassword) ? "error" : ""}
          disabled={loading}
        />
        {error && formData.password !== formData.confirmPassword && <span className="error-text">–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç</span>}

        {error && <span className="error-text submit-error">{error}</span>}

        <button type="submit" disabled={loading}>
          {loading ? "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è..." : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
        </button>

        <p className="login-hint">
          –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{' '}
          <span 
            className="login-link" 
            onClick={loading ? undefined : onSwitchToLogin}
          >
            –í–æ–π–¥–∏—Ç–µ
          </span>
        </p>
      </form>
    </div>
  );
}
